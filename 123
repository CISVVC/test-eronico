
std::vector<Transaction> m_transactions;


Public:
Transactionlog();
void add_transaction(const Transa)
std::vector<Transaction> get_transaction_for_day(int day) const;
std::vector<double> get_daily_balances() const;
double get_balance(uint day) const;
douvble get_average_daily_balance(const std::vector<double> &balances) const;
        get_min_daily_bala
        get_transaction_total_for_day(int day)const;
void print_transaction__for_day(int day) const;
void print_statement_header()const;
\void print_balance(const std::vector<double> &db) const;
      print_interest
      print_dsily_balance_report()const;
 void read();
 int get_first_day()const
     get_last_day() const;
     
